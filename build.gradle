buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

def querydsl_version= "5.0.0"

def querydslDir = "$buildDir/generated/querydsl"

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${querydsl_version}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydsl_version}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}



sourceSets {
	main.java.srcDirs += querydslDir
}


tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += [
			"-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated",
			"-s", querydslDir
	]
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}



tasks.named('test') {
	useJUnitPlatform()
}
