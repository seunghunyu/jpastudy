*식별, 비식별 관계의 장단점

데이터 베이스 설계관점에서는 식별 관계보다는 비식별 관계를 선호한다.
- 식별 관계는 부모 테이블의 기본 키를 자식 테이블로 전파하면서 자식 테이블의 기본 키 컬럼이 점점 늘어남
  결국 조인할 때 SQL이 복잡해지고 기본 키 인덱스가 불필요하게 커질 수 있다.

- 식별 관계는 2개 이상의 컬럼을 합해서 복합 기본 키를 만들어야 하는 경우가 많음
- 식별 관계를 사용할 때 기본 키로 비지니스 의미가 있는 자연 키 컬럼을 조합 하는 경우가 많음
  반면 비식별 관계의 기본 키는 비지니스와 전혀 관계없는 대리 키를 주로 사용
  비즈니스 요구 사항은 시간이 지남에 따라 계속해서 변경하기에 식별 관계의 자연 키 컬럼들이 자식에 손자까지 전파되면 벼녕이 어렵다.

- 부모 테이블의 기본 키를 자식 테이블의 기본 키로 사용하므로 테이블 구조가 유연하지 못함

객체 관계 매핑의 관점에서 보면 아래와 같은 이유로 비식별 관계를 선호한다.
- 일대일 관계를 제외하고 식별 관계는 2개 이상의 컬럼을 묶은 복합 기본 키를 사용한다.
  JPA에서 복합 키는 별도의 복합 키 클래스를 만들어서 사용해야 한다.

- 비식별 관계의 기본 키는 주로 대리 키를 사용하는데 JPA 는 @GenratedValue 처럼 대리 키를 생성하기 위한 편리한 방법이 제공된다.

식별 관계의 장점은 기본 키 인덱스를 활용하기 좋고 상위 테이블들의 기본 키 컬럼을 자식, 손자 테이블들이 가지고 있으므로 특정 상황에 조인없이 하위테이블만으로 검색을 완료 할 수 있다.


선택적 비식별 관계보다는 필수적 비식별 관계를 사용하는 것이 좋은데 선택적인 비식별 관계는 NULL을 허용하므로 조인할 때에 외부 조인을 사용해야 한다.
반면에 필수적 관계는 NOT NULL로 항상 관계가 있다는 것을 보장하므로 내부 조인만 사용해도 된다.


**외래키에 NULL 허용 -> 선택적 비식별 관계


